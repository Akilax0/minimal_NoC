$date
	Sun Nov 19 10:56:35 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module axi4lite_slave_tb $end
$var wire 2 ! bresp [1:0] $end
$var wire 2 " rresp [1:0] $end
$var wire 1 # write_en $end
$var wire 64 $ write_data [63:0] $end
$var wire 1 % wready $end
$var wire 1 & rvalid $end
$var wire 1 ' read_en $end
$var wire 32 ( rdata [31:0] $end
$var wire 1 ) bvalid $end
$var wire 1 * awready $end
$var wire 1 + arready $end
$var reg 32 , araddr [31:0] $end
$var reg 1 - arestn $end
$var reg 1 . arvalid $end
$var reg 32 / awaddr [31:0] $end
$var reg 1 0 awvalid $end
$var reg 1 1 bready $end
$var reg 1 2 clk $end
$var reg 1 3 empty $end
$var reg 1 4 full $end
$var reg 32 5 read_data [31:0] $end
$var reg 1 6 rready $end
$var reg 32 7 wdata [31:0] $end
$var reg 1 8 wvalid $end
$scope module my_slave $end
$var wire 1 2 aclk $end
$var wire 32 9 araddr [31:0] $end
$var wire 1 - arestn $end
$var wire 1 . arvalid $end
$var wire 32 : awaddr [31:0] $end
$var wire 1 0 awvalid $end
$var wire 1 1 bready $end
$var wire 2 ; bresp [1:0] $end
$var wire 1 3 empty $end
$var wire 1 4 full $end
$var wire 32 < rdata [31:0] $end
$var wire 32 = read_data [31:0] $end
$var wire 1 ' read_en $end
$var wire 1 6 rready $end
$var wire 2 > rresp [1:0] $end
$var wire 32 ? wdata [31:0] $end
$var wire 1 % wready $end
$var wire 1 # write_en $end
$var wire 1 8 wvalid $end
$var wire 64 @ write_data [63:0] $end
$var wire 1 A reset $end
$var reg 1 + arready $end
$var reg 1 * awready $end
$var reg 1 ) bvalid $end
$var reg 1 & rvalid $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
1A
b0 @
b0 ?
b0 >
b0 =
b0 <
b0 ;
b0 :
b0 9
08
b0 7
06
b0 5
04
03
12
01
00
b0 /
0.
0-
b0 ,
0+
0*
0)
b0 (
0'
0&
0%
b0 $
0#
b0 "
b0 !
$end
#5000
02
#10000
12
0A
1-
#15000
02
#20000
12
#25000
02
#30000
1%
1*
12
11
18
b10110101101101011011010110110101 7
b10110101101101011011010110110101 ?
10
b1010010110100101101001011010010110110101101101011011010110110101 $
b1010010110100101101001011010010110110101101101011011010110110101 @
b10100101101001011010010110100101 /
b10100101101001011010010110100101 :
#35000
02
#40000
1#
1)
0%
0*
00
12
#45000
02
#50000
0#
0)
01
12
b0 7
b0 ?
b0 $
b0 @
b0 /
b0 :
#55000
02
#60000
12
#65000
02
#70000
1+
12
08
16
1.
b10100101101001011010010110100101 ,
b10100101101001011010010110100101 9
#75000
02
#80000
1'
1&
0+
0.
12
#85000
02
#90000
0'
0&
06
12
#95000
02
#100000
12
#105000
02
#110000
12
#115000
02
#120000
12
